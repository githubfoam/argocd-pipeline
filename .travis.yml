---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always
matrix:
  fast_finish: true
  include:

    - name: "deploy argo cd  w snaps on focal amd64"
      dist: focal
      arch: amd64
      addons:
        snaps:
          - name: kubectl
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: helm
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag      
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-kind
        - sudo kind create cluster --name tutorial-cluster
        - sudo kubectl config use-context kind-tutorial-cluster
        - sudo make deploy-argocd
        - sudo kind delete cluster --name tutorial-cluster        
      after_success:
        - deactivate

    - name: "deploy argo cd  w snaps on bionic amd64"
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: kubectl
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: helm
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag      
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-kind
        - sudo kind create cluster --name tutorial-cluster
        - sudo kubectl config use-context kind-tutorial-cluster
        - sudo make deploy-argocd
        - sudo kind delete cluster --name tutorial-cluster        
      after_success:
        - deactivate

# The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp
    # - name: "deploy argo cd  wo snaps on focal amd64"
    #   dist: focal
    #   arch: amd64
    #   language: python
    #   # python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest
    #     - sudo make deploy-argocd
    #   after_success:
    #     - deactivate

# TESTED OK
    - name: "deploy argo cd  wo snaps on bionic amd64"
      dist: bionic
      arch: amd64
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-minikube-latest
        - sudo make deploy-argocd
      after_success:
        - deactivate

    # argocd
    # https://argoproj.github.io/argo-cd/cli_installation/
    - name: "deploy argocd w homebrew on macOS 10.15.5 osx xcode12u"
      os: osx
      osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
        - xcode12u
      addons:
        homebrew:
          packages:
          - argocd 
          update: true
      language: shell
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - python --version
        - pip install -r requirements.txt
      # script:
      after_success:
        - deactivate

    # argocd
    # https://argoproj.github.io/argo-cd/cli_installation/
    - name: "deploy argocd wo homebrew on macOS 10.15.5 osx xcode12u"
      os: osx
      osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
        - xcode12u
      # addons:
      #   homebrew:
      #     packages:
      #     - argocd 
      #     update: true
      language: shell
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - python --version
        - pip install -r requirements.txt
      script:
        - VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
        - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-darwin-amd64
        - chmod +x /usr/local/bin/argocd
      after_success:
        - deactivate        